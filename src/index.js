/**
 * Kinow API
 * Client API for Kinow back-office
 *
 * OpenAPI spec version: 1.4.12
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Actor', 'model/Actor1', 'model/Actor2', 'model/Actors', 'model/Address', 'model/Address1', 'model/BlogCategory', 'model/BlogCategoryLists', 'model/BlogPage', 'model/BlogPageLists', 'model/Bonus', 'model/CMSCategoriesLists', 'model/CMSCategory', 'model/CMSPage', 'model/CMSPageLists', 'model/Cart', 'model/Cart1', 'model/Cart2', 'model/CartIDList', 'model/CartPrice', 'model/CartRule', 'model/CartRuleRestrictionGroup', 'model/CartRuleRestrictionGroupItem', 'model/CartRules', 'model/Carts', 'model/Categories', 'model/Category', 'model/Configuration', 'model/ConfigurationList', 'model/Contact', 'model/Contacts', 'model/Countries', 'model/Country', 'model/CreateExtractSubtitleRequest', 'model/CreateVideoSubtitleRequest', 'model/CredentialsValidation', 'model/Currencies', 'model/Currency', 'model/Customer', 'model/CustomerCreateRequest', 'model/CustomerCurrentViews', 'model/CustomerGroupVideoStats', 'model/CustomerGroupVideoStats1', 'model/CustomerId', 'model/CustomerVideoStats', 'model/CustomerVideoStats1', 'model/Customers', 'model/Device', 'model/DeviceList', 'model/Director', 'model/Director1', 'model/Director2', 'model/Directors', 'model/DownloadInformations', 'model/Employee', 'model/Employees', 'model/Extract', 'model/Feature', 'model/FeatureValue', 'model/Features', 'model/FreeGift', 'model/FreeGift1', 'model/Gender', 'model/Genders', 'model/Geoloc', 'model/GeolocSettings', 'model/Geolocs', 'model/Gift', 'model/Gift1', 'model/Gift2', 'model/Gift3', 'model/GiftToken', 'model/Gifts', 'model/Gifts1', 'model/GoogleAnalytics', 'model/Group', 'model/GroupCreateRequest', 'model/Groups', 'model/I18nField', 'model/IPCoordinates', 'model/IPLocation', 'model/Image', 'model/Language', 'model/Languages', 'model/LogoSettings', 'model/MediaFile', 'model/MediaFiles', 'model/MediaSource', 'model/MediaSources', 'model/OAuthToken', 'model/Order', 'model/OrderHistories', 'model/OrderHistory', 'model/OrderState', 'model/OrderStates', 'model/Orders', 'model/Page', 'model/PageLists', 'model/Pagination', 'model/PaymentArguments', 'model/PaymentDetails', 'model/PaymentDetails1', 'model/PaymentMethods', 'model/PaymentModule', 'model/PaymentModules', 'model/PaymentUrl', 'model/PlatformAccessInfo', 'model/Player', 'model/Player1', 'model/Playlist', 'model/PlaylistUpdate', 'model/Playlists', 'model/PrepaymentBalance', 'model/PrepaymentBonus', 'model/PrepaymentBonus1', 'model/PrepaymentOperation', 'model/PrepaymentOperations', 'model/PrepaymentRecharge', 'model/PrepaymentRecharges', 'model/Product', 'model/ProductAccess', 'model/ProductAccessInfo', 'model/ProductAttribute', 'model/ProductAttributeCreateRequest', 'model/ProductAttributeCreateRequest1', 'model/ProductAttributesResponse', 'model/ProductCategories', 'model/ProductIDList', 'model/ProductIDList1', 'model/ProductImagesResponse', 'model/ProductPrice', 'model/ProductPricePrices', 'model/Products', 'model/Products1', 'model/RegistrationField', 'model/RegistrationFields', 'model/Screenshot', 'model/SessionVideoStat', 'model/SessionVideoStats', 'model/SocialSettings', 'model/Subscription', 'model/SubscriptionAccesses', 'model/Subscriptions', 'model/Subtitle', 'model/SubtitleFile', 'model/SubtitleFiles', 'model/Support', 'model/SupportMessage', 'model/Tag', 'model/Task', 'model/TaskCreateRequest', 'model/TaxRule', 'model/TaxRules', 'model/Token', 'model/Video', 'model/VideoAccessInfo', 'model/VideoCategory', 'model/VideoFreeAccess', 'model/VideoGroup', 'model/VideoGroup1', 'model/VideoIDList', 'model/VideoIDList1', 'model/VideoStat', 'model/VideoStats', 'model/VideoSubtitlesResponse', 'model/VideoViews', 'model/Videos', 'model/Videos1', 'model/Videos2', 'model/WidgetFooterMenu', 'model/WidgetFooterMenus', 'model/WidgetHookPhrase', 'model/WidgetHookPhrases', 'model/WidgetSlider', 'model/WidgetSliders', 'model/WidgetTopMenu', 'model/WidgetTopMenus', 'api/ActorsApi', 'api/AddressApi', 'api/AttributesApi', 'api/BlogCategoriesApi', 'api/BlogPagesApi', 'api/BookmarksApi', 'api/CMSCategoriesApi', 'api/CMSPagesApi', 'api/CartRulesApi', 'api/CartsApi', 'api/CategoriesApi', 'api/CategoryVideosApi', 'api/ConfigurationApi', 'api/CountriesApi', 'api/CurrenciesApi', 'api/CustomersApi', 'api/DevicesApi', 'api/DirectorsApi', 'api/EmployeesApi', 'api/ExtractsApi', 'api/FeatureValuesApi', 'api/FeaturesApi', 'api/FreeGiftsApi', 'api/GendersApi', 'api/GeolocationsApi', 'api/GiftsApi', 'api/GroupsApi', 'api/ImagesApi', 'api/LanguagesApi', 'api/MediaFilesApi', 'api/MediaSourcesApi', 'api/OAuthApi', 'api/OrderHistoriesApi', 'api/OrderStatesApi', 'api/OrdersApi', 'api/PagesApi', 'api/PaymentModulesApi', 'api/PlaylistsApi', 'api/PrepaymentsApi', 'api/ProductAccessesApi', 'api/ProductsApi', 'api/StatsApi', 'api/SubscriptionsApi', 'api/SubtitlesApi', 'api/SupportApi', 'api/TasksApi', 'api/TaxRulesApi', 'api/VideoGroupsApi', 'api/VideosApi', 'api/WidgetsApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/Actor'), require('./model/Actor1'), require('./model/Actor2'), require('./model/Actors'), require('./model/Address'), require('./model/Address1'), require('./model/BlogCategory'), require('./model/BlogCategoryLists'), require('./model/BlogPage'), require('./model/BlogPageLists'), require('./model/Bonus'), require('./model/CMSCategoriesLists'), require('./model/CMSCategory'), require('./model/CMSPage'), require('./model/CMSPageLists'), require('./model/Cart'), require('./model/Cart1'), require('./model/Cart2'), require('./model/CartIDList'), require('./model/CartPrice'), require('./model/CartRule'), require('./model/CartRuleRestrictionGroup'), require('./model/CartRuleRestrictionGroupItem'), require('./model/CartRules'), require('./model/Carts'), require('./model/Categories'), require('./model/Category'), require('./model/Configuration'), require('./model/ConfigurationList'), require('./model/Contact'), require('./model/Contacts'), require('./model/Countries'), require('./model/Country'), require('./model/CreateExtractSubtitleRequest'), require('./model/CreateVideoSubtitleRequest'), require('./model/CredentialsValidation'), require('./model/Currencies'), require('./model/Currency'), require('./model/Customer'), require('./model/CustomerCreateRequest'), require('./model/CustomerCurrentViews'), require('./model/CustomerGroupVideoStats'), require('./model/CustomerGroupVideoStats1'), require('./model/CustomerId'), require('./model/CustomerVideoStats'), require('./model/CustomerVideoStats1'), require('./model/Customers'), require('./model/Device'), require('./model/DeviceList'), require('./model/Director'), require('./model/Director1'), require('./model/Director2'), require('./model/Directors'), require('./model/DownloadInformations'), require('./model/Employee'), require('./model/Employees'), require('./model/Extract'), require('./model/Feature'), require('./model/FeatureValue'), require('./model/Features'), require('./model/FreeGift'), require('./model/FreeGift1'), require('./model/Gender'), require('./model/Genders'), require('./model/Geoloc'), require('./model/GeolocSettings'), require('./model/Geolocs'), require('./model/Gift'), require('./model/Gift1'), require('./model/Gift2'), require('./model/Gift3'), require('./model/GiftToken'), require('./model/Gifts'), require('./model/Gifts1'), require('./model/GoogleAnalytics'), require('./model/Group'), require('./model/GroupCreateRequest'), require('./model/Groups'), require('./model/I18nField'), require('./model/IPCoordinates'), require('./model/IPLocation'), require('./model/Image'), require('./model/Language'), require('./model/Languages'), require('./model/LogoSettings'), require('./model/MediaFile'), require('./model/MediaFiles'), require('./model/MediaSource'), require('./model/MediaSources'), require('./model/OAuthToken'), require('./model/Order'), require('./model/OrderHistories'), require('./model/OrderHistory'), require('./model/OrderState'), require('./model/OrderStates'), require('./model/Orders'), require('./model/Page'), require('./model/PageLists'), require('./model/Pagination'), require('./model/PaymentArguments'), require('./model/PaymentDetails'), require('./model/PaymentDetails1'), require('./model/PaymentMethods'), require('./model/PaymentModule'), require('./model/PaymentModules'), require('./model/PaymentUrl'), require('./model/PlatformAccessInfo'), require('./model/Player'), require('./model/Player1'), require('./model/Playlist'), require('./model/PlaylistUpdate'), require('./model/Playlists'), require('./model/PrepaymentBalance'), require('./model/PrepaymentBonus'), require('./model/PrepaymentBonus1'), require('./model/PrepaymentOperation'), require('./model/PrepaymentOperations'), require('./model/PrepaymentRecharge'), require('./model/PrepaymentRecharges'), require('./model/Product'), require('./model/ProductAccess'), require('./model/ProductAccessInfo'), require('./model/ProductAttribute'), require('./model/ProductAttributeCreateRequest'), require('./model/ProductAttributeCreateRequest1'), require('./model/ProductAttributesResponse'), require('./model/ProductCategories'), require('./model/ProductIDList'), require('./model/ProductIDList1'), require('./model/ProductImagesResponse'), require('./model/ProductPrice'), require('./model/ProductPricePrices'), require('./model/Products'), require('./model/Products1'), require('./model/RegistrationField'), require('./model/RegistrationFields'), require('./model/Screenshot'), require('./model/SessionVideoStat'), require('./model/SessionVideoStats'), require('./model/SocialSettings'), require('./model/Subscription'), require('./model/SubscriptionAccesses'), require('./model/Subscriptions'), require('./model/Subtitle'), require('./model/SubtitleFile'), require('./model/SubtitleFiles'), require('./model/Support'), require('./model/SupportMessage'), require('./model/Tag'), require('./model/Task'), require('./model/TaskCreateRequest'), require('./model/TaxRule'), require('./model/TaxRules'), require('./model/Token'), require('./model/Video'), require('./model/VideoAccessInfo'), require('./model/VideoCategory'), require('./model/VideoFreeAccess'), require('./model/VideoGroup'), require('./model/VideoGroup1'), require('./model/VideoIDList'), require('./model/VideoIDList1'), require('./model/VideoStat'), require('./model/VideoStats'), require('./model/VideoSubtitlesResponse'), require('./model/VideoViews'), require('./model/Videos'), require('./model/Videos1'), require('./model/Videos2'), require('./model/WidgetFooterMenu'), require('./model/WidgetFooterMenus'), require('./model/WidgetHookPhrase'), require('./model/WidgetHookPhrases'), require('./model/WidgetSlider'), require('./model/WidgetSliders'), require('./model/WidgetTopMenu'), require('./model/WidgetTopMenus'), require('./api/ActorsApi'), require('./api/AddressApi'), require('./api/AttributesApi'), require('./api/BlogCategoriesApi'), require('./api/BlogPagesApi'), require('./api/BookmarksApi'), require('./api/CMSCategoriesApi'), require('./api/CMSPagesApi'), require('./api/CartRulesApi'), require('./api/CartsApi'), require('./api/CategoriesApi'), require('./api/CategoryVideosApi'), require('./api/ConfigurationApi'), require('./api/CountriesApi'), require('./api/CurrenciesApi'), require('./api/CustomersApi'), require('./api/DevicesApi'), require('./api/DirectorsApi'), require('./api/EmployeesApi'), require('./api/ExtractsApi'), require('./api/FeatureValuesApi'), require('./api/FeaturesApi'), require('./api/FreeGiftsApi'), require('./api/GendersApi'), require('./api/GeolocationsApi'), require('./api/GiftsApi'), require('./api/GroupsApi'), require('./api/ImagesApi'), require('./api/LanguagesApi'), require('./api/MediaFilesApi'), require('./api/MediaSourcesApi'), require('./api/OAuthApi'), require('./api/OrderHistoriesApi'), require('./api/OrderStatesApi'), require('./api/OrdersApi'), require('./api/PagesApi'), require('./api/PaymentModulesApi'), require('./api/PlaylistsApi'), require('./api/PrepaymentsApi'), require('./api/ProductAccessesApi'), require('./api/ProductsApi'), require('./api/StatsApi'), require('./api/SubscriptionsApi'), require('./api/SubtitlesApi'), require('./api/SupportApi'), require('./api/TasksApi'), require('./api/TaxRulesApi'), require('./api/VideoGroupsApi'), require('./api/VideosApi'), require('./api/WidgetsApi'));
  }
}(function(ApiClient, Actor, Actor1, Actor2, Actors, Address, Address1, BlogCategory, BlogCategoryLists, BlogPage, BlogPageLists, Bonus, CMSCategoriesLists, CMSCategory, CMSPage, CMSPageLists, Cart, Cart1, Cart2, CartIDList, CartPrice, CartRule, CartRuleRestrictionGroup, CartRuleRestrictionGroupItem, CartRules, Carts, Categories, Category, Configuration, ConfigurationList, Contact, Contacts, Countries, Country, CreateExtractSubtitleRequest, CreateVideoSubtitleRequest, CredentialsValidation, Currencies, Currency, Customer, CustomerCreateRequest, CustomerCurrentViews, CustomerGroupVideoStats, CustomerGroupVideoStats1, CustomerId, CustomerVideoStats, CustomerVideoStats1, Customers, Device, DeviceList, Director, Director1, Director2, Directors, DownloadInformations, Employee, Employees, Extract, Feature, FeatureValue, Features, FreeGift, FreeGift1, Gender, Genders, Geoloc, GeolocSettings, Geolocs, Gift, Gift1, Gift2, Gift3, GiftToken, Gifts, Gifts1, GoogleAnalytics, Group, GroupCreateRequest, Groups, I18nField, IPCoordinates, IPLocation, Image, Language, Languages, LogoSettings, MediaFile, MediaFiles, MediaSource, MediaSources, OAuthToken, Order, OrderHistories, OrderHistory, OrderState, OrderStates, Orders, Page, PageLists, Pagination, PaymentArguments, PaymentDetails, PaymentDetails1, PaymentMethods, PaymentModule, PaymentModules, PaymentUrl, PlatformAccessInfo, Player, Player1, Playlist, PlaylistUpdate, Playlists, PrepaymentBalance, PrepaymentBonus, PrepaymentBonus1, PrepaymentOperation, PrepaymentOperations, PrepaymentRecharge, PrepaymentRecharges, Product, ProductAccess, ProductAccessInfo, ProductAttribute, ProductAttributeCreateRequest, ProductAttributeCreateRequest1, ProductAttributesResponse, ProductCategories, ProductIDList, ProductIDList1, ProductImagesResponse, ProductPrice, ProductPricePrices, Products, Products1, RegistrationField, RegistrationFields, Screenshot, SessionVideoStat, SessionVideoStats, SocialSettings, Subscription, SubscriptionAccesses, Subscriptions, Subtitle, SubtitleFile, SubtitleFiles, Support, SupportMessage, Tag, Task, TaskCreateRequest, TaxRule, TaxRules, Token, Video, VideoAccessInfo, VideoCategory, VideoFreeAccess, VideoGroup, VideoGroup1, VideoIDList, VideoIDList1, VideoStat, VideoStats, VideoSubtitlesResponse, VideoViews, Videos, Videos1, Videos2, WidgetFooterMenu, WidgetFooterMenus, WidgetHookPhrase, WidgetHookPhrases, WidgetSlider, WidgetSliders, WidgetTopMenu, WidgetTopMenus, ActorsApi, AddressApi, AttributesApi, BlogCategoriesApi, BlogPagesApi, BookmarksApi, CMSCategoriesApi, CMSPagesApi, CartRulesApi, CartsApi, CategoriesApi, CategoryVideosApi, ConfigurationApi, CountriesApi, CurrenciesApi, CustomersApi, DevicesApi, DirectorsApi, EmployeesApi, ExtractsApi, FeatureValuesApi, FeaturesApi, FreeGiftsApi, GendersApi, GeolocationsApi, GiftsApi, GroupsApi, ImagesApi, LanguagesApi, MediaFilesApi, MediaSourcesApi, OAuthApi, OrderHistoriesApi, OrderStatesApi, OrdersApi, PagesApi, PaymentModulesApi, PlaylistsApi, PrepaymentsApi, ProductAccessesApi, ProductsApi, StatsApi, SubscriptionsApi, SubtitlesApi, SupportApi, TasksApi, TaxRulesApi, VideoGroupsApi, VideosApi, WidgetsApi) {
  'use strict';

  /**
   * Client_API_for_Kinow_back_office.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var KinowJavascriptSdk = require('index'); // See note below*.
   * var xxxSvc = new KinowJavascriptSdk.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new KinowJavascriptSdk.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new KinowJavascriptSdk.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new KinowJavascriptSdk.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.4.12
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Actor model constructor.
     * @property {module:model/Actor}
     */
    Actor: Actor,
    /**
     * The Actor1 model constructor.
     * @property {module:model/Actor1}
     */
    Actor1: Actor1,
    /**
     * The Actor2 model constructor.
     * @property {module:model/Actor2}
     */
    Actor2: Actor2,
    /**
     * The Actors model constructor.
     * @property {module:model/Actors}
     */
    Actors: Actors,
    /**
     * The Address model constructor.
     * @property {module:model/Address}
     */
    Address: Address,
    /**
     * The Address1 model constructor.
     * @property {module:model/Address1}
     */
    Address1: Address1,
    /**
     * The BlogCategory model constructor.
     * @property {module:model/BlogCategory}
     */
    BlogCategory: BlogCategory,
    /**
     * The BlogCategoryLists model constructor.
     * @property {module:model/BlogCategoryLists}
     */
    BlogCategoryLists: BlogCategoryLists,
    /**
     * The BlogPage model constructor.
     * @property {module:model/BlogPage}
     */
    BlogPage: BlogPage,
    /**
     * The BlogPageLists model constructor.
     * @property {module:model/BlogPageLists}
     */
    BlogPageLists: BlogPageLists,
    /**
     * The Bonus model constructor.
     * @property {module:model/Bonus}
     */
    Bonus: Bonus,
    /**
     * The CMSCategoriesLists model constructor.
     * @property {module:model/CMSCategoriesLists}
     */
    CMSCategoriesLists: CMSCategoriesLists,
    /**
     * The CMSCategory model constructor.
     * @property {module:model/CMSCategory}
     */
    CMSCategory: CMSCategory,
    /**
     * The CMSPage model constructor.
     * @property {module:model/CMSPage}
     */
    CMSPage: CMSPage,
    /**
     * The CMSPageLists model constructor.
     * @property {module:model/CMSPageLists}
     */
    CMSPageLists: CMSPageLists,
    /**
     * The Cart model constructor.
     * @property {module:model/Cart}
     */
    Cart: Cart,
    /**
     * The Cart1 model constructor.
     * @property {module:model/Cart1}
     */
    Cart1: Cart1,
    /**
     * The Cart2 model constructor.
     * @property {module:model/Cart2}
     */
    Cart2: Cart2,
    /**
     * The CartIDList model constructor.
     * @property {module:model/CartIDList}
     */
    CartIDList: CartIDList,
    /**
     * The CartPrice model constructor.
     * @property {module:model/CartPrice}
     */
    CartPrice: CartPrice,
    /**
     * The CartRule model constructor.
     * @property {module:model/CartRule}
     */
    CartRule: CartRule,
    /**
     * The CartRuleRestrictionGroup model constructor.
     * @property {module:model/CartRuleRestrictionGroup}
     */
    CartRuleRestrictionGroup: CartRuleRestrictionGroup,
    /**
     * The CartRuleRestrictionGroupItem model constructor.
     * @property {module:model/CartRuleRestrictionGroupItem}
     */
    CartRuleRestrictionGroupItem: CartRuleRestrictionGroupItem,
    /**
     * The CartRules model constructor.
     * @property {module:model/CartRules}
     */
    CartRules: CartRules,
    /**
     * The Carts model constructor.
     * @property {module:model/Carts}
     */
    Carts: Carts,
    /**
     * The Categories model constructor.
     * @property {module:model/Categories}
     */
    Categories: Categories,
    /**
     * The Category model constructor.
     * @property {module:model/Category}
     */
    Category: Category,
    /**
     * The Configuration model constructor.
     * @property {module:model/Configuration}
     */
    Configuration: Configuration,
    /**
     * The ConfigurationList model constructor.
     * @property {module:model/ConfigurationList}
     */
    ConfigurationList: ConfigurationList,
    /**
     * The Contact model constructor.
     * @property {module:model/Contact}
     */
    Contact: Contact,
    /**
     * The Contacts model constructor.
     * @property {module:model/Contacts}
     */
    Contacts: Contacts,
    /**
     * The Countries model constructor.
     * @property {module:model/Countries}
     */
    Countries: Countries,
    /**
     * The Country model constructor.
     * @property {module:model/Country}
     */
    Country: Country,
    /**
     * The CreateExtractSubtitleRequest model constructor.
     * @property {module:model/CreateExtractSubtitleRequest}
     */
    CreateExtractSubtitleRequest: CreateExtractSubtitleRequest,
    /**
     * The CreateVideoSubtitleRequest model constructor.
     * @property {module:model/CreateVideoSubtitleRequest}
     */
    CreateVideoSubtitleRequest: CreateVideoSubtitleRequest,
    /**
     * The CredentialsValidation model constructor.
     * @property {module:model/CredentialsValidation}
     */
    CredentialsValidation: CredentialsValidation,
    /**
     * The Currencies model constructor.
     * @property {module:model/Currencies}
     */
    Currencies: Currencies,
    /**
     * The Currency model constructor.
     * @property {module:model/Currency}
     */
    Currency: Currency,
    /**
     * The Customer model constructor.
     * @property {module:model/Customer}
     */
    Customer: Customer,
    /**
     * The CustomerCreateRequest model constructor.
     * @property {module:model/CustomerCreateRequest}
     */
    CustomerCreateRequest: CustomerCreateRequest,
    /**
     * The CustomerCurrentViews model constructor.
     * @property {module:model/CustomerCurrentViews}
     */
    CustomerCurrentViews: CustomerCurrentViews,
    /**
     * The CustomerGroupVideoStats model constructor.
     * @property {module:model/CustomerGroupVideoStats}
     */
    CustomerGroupVideoStats: CustomerGroupVideoStats,
    /**
     * The CustomerGroupVideoStats1 model constructor.
     * @property {module:model/CustomerGroupVideoStats1}
     */
    CustomerGroupVideoStats1: CustomerGroupVideoStats1,
    /**
     * The CustomerId model constructor.
     * @property {module:model/CustomerId}
     */
    CustomerId: CustomerId,
    /**
     * The CustomerVideoStats model constructor.
     * @property {module:model/CustomerVideoStats}
     */
    CustomerVideoStats: CustomerVideoStats,
    /**
     * The CustomerVideoStats1 model constructor.
     * @property {module:model/CustomerVideoStats1}
     */
    CustomerVideoStats1: CustomerVideoStats1,
    /**
     * The Customers model constructor.
     * @property {module:model/Customers}
     */
    Customers: Customers,
    /**
     * The Device model constructor.
     * @property {module:model/Device}
     */
    Device: Device,
    /**
     * The DeviceList model constructor.
     * @property {module:model/DeviceList}
     */
    DeviceList: DeviceList,
    /**
     * The Director model constructor.
     * @property {module:model/Director}
     */
    Director: Director,
    /**
     * The Director1 model constructor.
     * @property {module:model/Director1}
     */
    Director1: Director1,
    /**
     * The Director2 model constructor.
     * @property {module:model/Director2}
     */
    Director2: Director2,
    /**
     * The Directors model constructor.
     * @property {module:model/Directors}
     */
    Directors: Directors,
    /**
     * The DownloadInformations model constructor.
     * @property {module:model/DownloadInformations}
     */
    DownloadInformations: DownloadInformations,
    /**
     * The Employee model constructor.
     * @property {module:model/Employee}
     */
    Employee: Employee,
    /**
     * The Employees model constructor.
     * @property {module:model/Employees}
     */
    Employees: Employees,
    /**
     * The Extract model constructor.
     * @property {module:model/Extract}
     */
    Extract: Extract,
    /**
     * The Feature model constructor.
     * @property {module:model/Feature}
     */
    Feature: Feature,
    /**
     * The FeatureValue model constructor.
     * @property {module:model/FeatureValue}
     */
    FeatureValue: FeatureValue,
    /**
     * The Features model constructor.
     * @property {module:model/Features}
     */
    Features: Features,
    /**
     * The FreeGift model constructor.
     * @property {module:model/FreeGift}
     */
    FreeGift: FreeGift,
    /**
     * The FreeGift1 model constructor.
     * @property {module:model/FreeGift1}
     */
    FreeGift1: FreeGift1,
    /**
     * The Gender model constructor.
     * @property {module:model/Gender}
     */
    Gender: Gender,
    /**
     * The Genders model constructor.
     * @property {module:model/Genders}
     */
    Genders: Genders,
    /**
     * The Geoloc model constructor.
     * @property {module:model/Geoloc}
     */
    Geoloc: Geoloc,
    /**
     * The GeolocSettings model constructor.
     * @property {module:model/GeolocSettings}
     */
    GeolocSettings: GeolocSettings,
    /**
     * The Geolocs model constructor.
     * @property {module:model/Geolocs}
     */
    Geolocs: Geolocs,
    /**
     * The Gift model constructor.
     * @property {module:model/Gift}
     */
    Gift: Gift,
    /**
     * The Gift1 model constructor.
     * @property {module:model/Gift1}
     */
    Gift1: Gift1,
    /**
     * The Gift2 model constructor.
     * @property {module:model/Gift2}
     */
    Gift2: Gift2,
    /**
     * The Gift3 model constructor.
     * @property {module:model/Gift3}
     */
    Gift3: Gift3,
    /**
     * The GiftToken model constructor.
     * @property {module:model/GiftToken}
     */
    GiftToken: GiftToken,
    /**
     * The Gifts model constructor.
     * @property {module:model/Gifts}
     */
    Gifts: Gifts,
    /**
     * The Gifts1 model constructor.
     * @property {module:model/Gifts1}
     */
    Gifts1: Gifts1,
    /**
     * The GoogleAnalytics model constructor.
     * @property {module:model/GoogleAnalytics}
     */
    GoogleAnalytics: GoogleAnalytics,
    /**
     * The Group model constructor.
     * @property {module:model/Group}
     */
    Group: Group,
    /**
     * The GroupCreateRequest model constructor.
     * @property {module:model/GroupCreateRequest}
     */
    GroupCreateRequest: GroupCreateRequest,
    /**
     * The Groups model constructor.
     * @property {module:model/Groups}
     */
    Groups: Groups,
    /**
     * The I18nField model constructor.
     * @property {module:model/I18nField}
     */
    I18nField: I18nField,
    /**
     * The IPCoordinates model constructor.
     * @property {module:model/IPCoordinates}
     */
    IPCoordinates: IPCoordinates,
    /**
     * The IPLocation model constructor.
     * @property {module:model/IPLocation}
     */
    IPLocation: IPLocation,
    /**
     * The Image model constructor.
     * @property {module:model/Image}
     */
    Image: Image,
    /**
     * The Language model constructor.
     * @property {module:model/Language}
     */
    Language: Language,
    /**
     * The Languages model constructor.
     * @property {module:model/Languages}
     */
    Languages: Languages,
    /**
     * The LogoSettings model constructor.
     * @property {module:model/LogoSettings}
     */
    LogoSettings: LogoSettings,
    /**
     * The MediaFile model constructor.
     * @property {module:model/MediaFile}
     */
    MediaFile: MediaFile,
    /**
     * The MediaFiles model constructor.
     * @property {module:model/MediaFiles}
     */
    MediaFiles: MediaFiles,
    /**
     * The MediaSource model constructor.
     * @property {module:model/MediaSource}
     */
    MediaSource: MediaSource,
    /**
     * The MediaSources model constructor.
     * @property {module:model/MediaSources}
     */
    MediaSources: MediaSources,
    /**
     * The OAuthToken model constructor.
     * @property {module:model/OAuthToken}
     */
    OAuthToken: OAuthToken,
    /**
     * The Order model constructor.
     * @property {module:model/Order}
     */
    Order: Order,
    /**
     * The OrderHistories model constructor.
     * @property {module:model/OrderHistories}
     */
    OrderHistories: OrderHistories,
    /**
     * The OrderHistory model constructor.
     * @property {module:model/OrderHistory}
     */
    OrderHistory: OrderHistory,
    /**
     * The OrderState model constructor.
     * @property {module:model/OrderState}
     */
    OrderState: OrderState,
    /**
     * The OrderStates model constructor.
     * @property {module:model/OrderStates}
     */
    OrderStates: OrderStates,
    /**
     * The Orders model constructor.
     * @property {module:model/Orders}
     */
    Orders: Orders,
    /**
     * The Page model constructor.
     * @property {module:model/Page}
     */
    Page: Page,
    /**
     * The PageLists model constructor.
     * @property {module:model/PageLists}
     */
    PageLists: PageLists,
    /**
     * The Pagination model constructor.
     * @property {module:model/Pagination}
     */
    Pagination: Pagination,
    /**
     * The PaymentArguments model constructor.
     * @property {module:model/PaymentArguments}
     */
    PaymentArguments: PaymentArguments,
    /**
     * The PaymentDetails model constructor.
     * @property {module:model/PaymentDetails}
     */
    PaymentDetails: PaymentDetails,
    /**
     * The PaymentDetails1 model constructor.
     * @property {module:model/PaymentDetails1}
     */
    PaymentDetails1: PaymentDetails1,
    /**
     * The PaymentMethods model constructor.
     * @property {module:model/PaymentMethods}
     */
    PaymentMethods: PaymentMethods,
    /**
     * The PaymentModule model constructor.
     * @property {module:model/PaymentModule}
     */
    PaymentModule: PaymentModule,
    /**
     * The PaymentModules model constructor.
     * @property {module:model/PaymentModules}
     */
    PaymentModules: PaymentModules,
    /**
     * The PaymentUrl model constructor.
     * @property {module:model/PaymentUrl}
     */
    PaymentUrl: PaymentUrl,
    /**
     * The PlatformAccessInfo model constructor.
     * @property {module:model/PlatformAccessInfo}
     */
    PlatformAccessInfo: PlatformAccessInfo,
    /**
     * The Player model constructor.
     * @property {module:model/Player}
     */
    Player: Player,
    /**
     * The Player1 model constructor.
     * @property {module:model/Player1}
     */
    Player1: Player1,
    /**
     * The Playlist model constructor.
     * @property {module:model/Playlist}
     */
    Playlist: Playlist,
    /**
     * The PlaylistUpdate model constructor.
     * @property {module:model/PlaylistUpdate}
     */
    PlaylistUpdate: PlaylistUpdate,
    /**
     * The Playlists model constructor.
     * @property {module:model/Playlists}
     */
    Playlists: Playlists,
    /**
     * The PrepaymentBalance model constructor.
     * @property {module:model/PrepaymentBalance}
     */
    PrepaymentBalance: PrepaymentBalance,
    /**
     * The PrepaymentBonus model constructor.
     * @property {module:model/PrepaymentBonus}
     */
    PrepaymentBonus: PrepaymentBonus,
    /**
     * The PrepaymentBonus1 model constructor.
     * @property {module:model/PrepaymentBonus1}
     */
    PrepaymentBonus1: PrepaymentBonus1,
    /**
     * The PrepaymentOperation model constructor.
     * @property {module:model/PrepaymentOperation}
     */
    PrepaymentOperation: PrepaymentOperation,
    /**
     * The PrepaymentOperations model constructor.
     * @property {module:model/PrepaymentOperations}
     */
    PrepaymentOperations: PrepaymentOperations,
    /**
     * The PrepaymentRecharge model constructor.
     * @property {module:model/PrepaymentRecharge}
     */
    PrepaymentRecharge: PrepaymentRecharge,
    /**
     * The PrepaymentRecharges model constructor.
     * @property {module:model/PrepaymentRecharges}
     */
    PrepaymentRecharges: PrepaymentRecharges,
    /**
     * The Product model constructor.
     * @property {module:model/Product}
     */
    Product: Product,
    /**
     * The ProductAccess model constructor.
     * @property {module:model/ProductAccess}
     */
    ProductAccess: ProductAccess,
    /**
     * The ProductAccessInfo model constructor.
     * @property {module:model/ProductAccessInfo}
     */
    ProductAccessInfo: ProductAccessInfo,
    /**
     * The ProductAttribute model constructor.
     * @property {module:model/ProductAttribute}
     */
    ProductAttribute: ProductAttribute,
    /**
     * The ProductAttributeCreateRequest model constructor.
     * @property {module:model/ProductAttributeCreateRequest}
     */
    ProductAttributeCreateRequest: ProductAttributeCreateRequest,
    /**
     * The ProductAttributeCreateRequest1 model constructor.
     * @property {module:model/ProductAttributeCreateRequest1}
     */
    ProductAttributeCreateRequest1: ProductAttributeCreateRequest1,
    /**
     * The ProductAttributesResponse model constructor.
     * @property {module:model/ProductAttributesResponse}
     */
    ProductAttributesResponse: ProductAttributesResponse,
    /**
     * The ProductCategories model constructor.
     * @property {module:model/ProductCategories}
     */
    ProductCategories: ProductCategories,
    /**
     * The ProductIDList model constructor.
     * @property {module:model/ProductIDList}
     */
    ProductIDList: ProductIDList,
    /**
     * The ProductIDList1 model constructor.
     * @property {module:model/ProductIDList1}
     */
    ProductIDList1: ProductIDList1,
    /**
     * The ProductImagesResponse model constructor.
     * @property {module:model/ProductImagesResponse}
     */
    ProductImagesResponse: ProductImagesResponse,
    /**
     * The ProductPrice model constructor.
     * @property {module:model/ProductPrice}
     */
    ProductPrice: ProductPrice,
    /**
     * The ProductPricePrices model constructor.
     * @property {module:model/ProductPricePrices}
     */
    ProductPricePrices: ProductPricePrices,
    /**
     * The Products model constructor.
     * @property {module:model/Products}
     */
    Products: Products,
    /**
     * The Products1 model constructor.
     * @property {module:model/Products1}
     */
    Products1: Products1,
    /**
     * The RegistrationField model constructor.
     * @property {module:model/RegistrationField}
     */
    RegistrationField: RegistrationField,
    /**
     * The RegistrationFields model constructor.
     * @property {module:model/RegistrationFields}
     */
    RegistrationFields: RegistrationFields,
    /**
     * The Screenshot model constructor.
     * @property {module:model/Screenshot}
     */
    Screenshot: Screenshot,
    /**
     * The SessionVideoStat model constructor.
     * @property {module:model/SessionVideoStat}
     */
    SessionVideoStat: SessionVideoStat,
    /**
     * The SessionVideoStats model constructor.
     * @property {module:model/SessionVideoStats}
     */
    SessionVideoStats: SessionVideoStats,
    /**
     * The SocialSettings model constructor.
     * @property {module:model/SocialSettings}
     */
    SocialSettings: SocialSettings,
    /**
     * The Subscription model constructor.
     * @property {module:model/Subscription}
     */
    Subscription: Subscription,
    /**
     * The SubscriptionAccesses model constructor.
     * @property {module:model/SubscriptionAccesses}
     */
    SubscriptionAccesses: SubscriptionAccesses,
    /**
     * The Subscriptions model constructor.
     * @property {module:model/Subscriptions}
     */
    Subscriptions: Subscriptions,
    /**
     * The Subtitle model constructor.
     * @property {module:model/Subtitle}
     */
    Subtitle: Subtitle,
    /**
     * The SubtitleFile model constructor.
     * @property {module:model/SubtitleFile}
     */
    SubtitleFile: SubtitleFile,
    /**
     * The SubtitleFiles model constructor.
     * @property {module:model/SubtitleFiles}
     */
    SubtitleFiles: SubtitleFiles,
    /**
     * The Support model constructor.
     * @property {module:model/Support}
     */
    Support: Support,
    /**
     * The SupportMessage model constructor.
     * @property {module:model/SupportMessage}
     */
    SupportMessage: SupportMessage,
    /**
     * The Tag model constructor.
     * @property {module:model/Tag}
     */
    Tag: Tag,
    /**
     * The Task model constructor.
     * @property {module:model/Task}
     */
    Task: Task,
    /**
     * The TaskCreateRequest model constructor.
     * @property {module:model/TaskCreateRequest}
     */
    TaskCreateRequest: TaskCreateRequest,
    /**
     * The TaxRule model constructor.
     * @property {module:model/TaxRule}
     */
    TaxRule: TaxRule,
    /**
     * The TaxRules model constructor.
     * @property {module:model/TaxRules}
     */
    TaxRules: TaxRules,
    /**
     * The Token model constructor.
     * @property {module:model/Token}
     */
    Token: Token,
    /**
     * The Video model constructor.
     * @property {module:model/Video}
     */
    Video: Video,
    /**
     * The VideoAccessInfo model constructor.
     * @property {module:model/VideoAccessInfo}
     */
    VideoAccessInfo: VideoAccessInfo,
    /**
     * The VideoCategory model constructor.
     * @property {module:model/VideoCategory}
     */
    VideoCategory: VideoCategory,
    /**
     * The VideoFreeAccess model constructor.
     * @property {module:model/VideoFreeAccess}
     */
    VideoFreeAccess: VideoFreeAccess,
    /**
     * The VideoGroup model constructor.
     * @property {module:model/VideoGroup}
     */
    VideoGroup: VideoGroup,
    /**
     * The VideoGroup1 model constructor.
     * @property {module:model/VideoGroup1}
     */
    VideoGroup1: VideoGroup1,
    /**
     * The VideoIDList model constructor.
     * @property {module:model/VideoIDList}
     */
    VideoIDList: VideoIDList,
    /**
     * The VideoIDList1 model constructor.
     * @property {module:model/VideoIDList1}
     */
    VideoIDList1: VideoIDList1,
    /**
     * The VideoStat model constructor.
     * @property {module:model/VideoStat}
     */
    VideoStat: VideoStat,
    /**
     * The VideoStats model constructor.
     * @property {module:model/VideoStats}
     */
    VideoStats: VideoStats,
    /**
     * The VideoSubtitlesResponse model constructor.
     * @property {module:model/VideoSubtitlesResponse}
     */
    VideoSubtitlesResponse: VideoSubtitlesResponse,
    /**
     * The VideoViews model constructor.
     * @property {module:model/VideoViews}
     */
    VideoViews: VideoViews,
    /**
     * The Videos model constructor.
     * @property {module:model/Videos}
     */
    Videos: Videos,
    /**
     * The Videos1 model constructor.
     * @property {module:model/Videos1}
     */
    Videos1: Videos1,
    /**
     * The Videos2 model constructor.
     * @property {module:model/Videos2}
     */
    Videos2: Videos2,
    /**
     * The WidgetFooterMenu model constructor.
     * @property {module:model/WidgetFooterMenu}
     */
    WidgetFooterMenu: WidgetFooterMenu,
    /**
     * The WidgetFooterMenus model constructor.
     * @property {module:model/WidgetFooterMenus}
     */
    WidgetFooterMenus: WidgetFooterMenus,
    /**
     * The WidgetHookPhrase model constructor.
     * @property {module:model/WidgetHookPhrase}
     */
    WidgetHookPhrase: WidgetHookPhrase,
    /**
     * The WidgetHookPhrases model constructor.
     * @property {module:model/WidgetHookPhrases}
     */
    WidgetHookPhrases: WidgetHookPhrases,
    /**
     * The WidgetSlider model constructor.
     * @property {module:model/WidgetSlider}
     */
    WidgetSlider: WidgetSlider,
    /**
     * The WidgetSliders model constructor.
     * @property {module:model/WidgetSliders}
     */
    WidgetSliders: WidgetSliders,
    /**
     * The WidgetTopMenu model constructor.
     * @property {module:model/WidgetTopMenu}
     */
    WidgetTopMenu: WidgetTopMenu,
    /**
     * The WidgetTopMenus model constructor.
     * @property {module:model/WidgetTopMenus}
     */
    WidgetTopMenus: WidgetTopMenus,
    /**
     * The ActorsApi service constructor.
     * @property {module:api/ActorsApi}
     */
    ActorsApi: ActorsApi,
    /**
     * The AddressApi service constructor.
     * @property {module:api/AddressApi}
     */
    AddressApi: AddressApi,
    /**
     * The AttributesApi service constructor.
     * @property {module:api/AttributesApi}
     */
    AttributesApi: AttributesApi,
    /**
     * The BlogCategoriesApi service constructor.
     * @property {module:api/BlogCategoriesApi}
     */
    BlogCategoriesApi: BlogCategoriesApi,
    /**
     * The BlogPagesApi service constructor.
     * @property {module:api/BlogPagesApi}
     */
    BlogPagesApi: BlogPagesApi,
    /**
     * The BookmarksApi service constructor.
     * @property {module:api/BookmarksApi}
     */
    BookmarksApi: BookmarksApi,
    /**
     * The CMSCategoriesApi service constructor.
     * @property {module:api/CMSCategoriesApi}
     */
    CMSCategoriesApi: CMSCategoriesApi,
    /**
     * The CMSPagesApi service constructor.
     * @property {module:api/CMSPagesApi}
     */
    CMSPagesApi: CMSPagesApi,
    /**
     * The CartRulesApi service constructor.
     * @property {module:api/CartRulesApi}
     */
    CartRulesApi: CartRulesApi,
    /**
     * The CartsApi service constructor.
     * @property {module:api/CartsApi}
     */
    CartsApi: CartsApi,
    /**
     * The CategoriesApi service constructor.
     * @property {module:api/CategoriesApi}
     */
    CategoriesApi: CategoriesApi,
    /**
     * The CategoryVideosApi service constructor.
     * @property {module:api/CategoryVideosApi}
     */
    CategoryVideosApi: CategoryVideosApi,
    /**
     * The ConfigurationApi service constructor.
     * @property {module:api/ConfigurationApi}
     */
    ConfigurationApi: ConfigurationApi,
    /**
     * The CountriesApi service constructor.
     * @property {module:api/CountriesApi}
     */
    CountriesApi: CountriesApi,
    /**
     * The CurrenciesApi service constructor.
     * @property {module:api/CurrenciesApi}
     */
    CurrenciesApi: CurrenciesApi,
    /**
     * The CustomersApi service constructor.
     * @property {module:api/CustomersApi}
     */
    CustomersApi: CustomersApi,
    /**
     * The DevicesApi service constructor.
     * @property {module:api/DevicesApi}
     */
    DevicesApi: DevicesApi,
    /**
     * The DirectorsApi service constructor.
     * @property {module:api/DirectorsApi}
     */
    DirectorsApi: DirectorsApi,
    /**
     * The EmployeesApi service constructor.
     * @property {module:api/EmployeesApi}
     */
    EmployeesApi: EmployeesApi,
    /**
     * The ExtractsApi service constructor.
     * @property {module:api/ExtractsApi}
     */
    ExtractsApi: ExtractsApi,
    /**
     * The FeatureValuesApi service constructor.
     * @property {module:api/FeatureValuesApi}
     */
    FeatureValuesApi: FeatureValuesApi,
    /**
     * The FeaturesApi service constructor.
     * @property {module:api/FeaturesApi}
     */
    FeaturesApi: FeaturesApi,
    /**
     * The FreeGiftsApi service constructor.
     * @property {module:api/FreeGiftsApi}
     */
    FreeGiftsApi: FreeGiftsApi,
    /**
     * The GendersApi service constructor.
     * @property {module:api/GendersApi}
     */
    GendersApi: GendersApi,
    /**
     * The GeolocationsApi service constructor.
     * @property {module:api/GeolocationsApi}
     */
    GeolocationsApi: GeolocationsApi,
    /**
     * The GiftsApi service constructor.
     * @property {module:api/GiftsApi}
     */
    GiftsApi: GiftsApi,
    /**
     * The GroupsApi service constructor.
     * @property {module:api/GroupsApi}
     */
    GroupsApi: GroupsApi,
    /**
     * The ImagesApi service constructor.
     * @property {module:api/ImagesApi}
     */
    ImagesApi: ImagesApi,
    /**
     * The LanguagesApi service constructor.
     * @property {module:api/LanguagesApi}
     */
    LanguagesApi: LanguagesApi,
    /**
     * The MediaFilesApi service constructor.
     * @property {module:api/MediaFilesApi}
     */
    MediaFilesApi: MediaFilesApi,
    /**
     * The MediaSourcesApi service constructor.
     * @property {module:api/MediaSourcesApi}
     */
    MediaSourcesApi: MediaSourcesApi,
    /**
     * The OAuthApi service constructor.
     * @property {module:api/OAuthApi}
     */
    OAuthApi: OAuthApi,
    /**
     * The OrderHistoriesApi service constructor.
     * @property {module:api/OrderHistoriesApi}
     */
    OrderHistoriesApi: OrderHistoriesApi,
    /**
     * The OrderStatesApi service constructor.
     * @property {module:api/OrderStatesApi}
     */
    OrderStatesApi: OrderStatesApi,
    /**
     * The OrdersApi service constructor.
     * @property {module:api/OrdersApi}
     */
    OrdersApi: OrdersApi,
    /**
     * The PagesApi service constructor.
     * @property {module:api/PagesApi}
     */
    PagesApi: PagesApi,
    /**
     * The PaymentModulesApi service constructor.
     * @property {module:api/PaymentModulesApi}
     */
    PaymentModulesApi: PaymentModulesApi,
    /**
     * The PlaylistsApi service constructor.
     * @property {module:api/PlaylistsApi}
     */
    PlaylistsApi: PlaylistsApi,
    /**
     * The PrepaymentsApi service constructor.
     * @property {module:api/PrepaymentsApi}
     */
    PrepaymentsApi: PrepaymentsApi,
    /**
     * The ProductAccessesApi service constructor.
     * @property {module:api/ProductAccessesApi}
     */
    ProductAccessesApi: ProductAccessesApi,
    /**
     * The ProductsApi service constructor.
     * @property {module:api/ProductsApi}
     */
    ProductsApi: ProductsApi,
    /**
     * The StatsApi service constructor.
     * @property {module:api/StatsApi}
     */
    StatsApi: StatsApi,
    /**
     * The SubscriptionsApi service constructor.
     * @property {module:api/SubscriptionsApi}
     */
    SubscriptionsApi: SubscriptionsApi,
    /**
     * The SubtitlesApi service constructor.
     * @property {module:api/SubtitlesApi}
     */
    SubtitlesApi: SubtitlesApi,
    /**
     * The SupportApi service constructor.
     * @property {module:api/SupportApi}
     */
    SupportApi: SupportApi,
    /**
     * The TasksApi service constructor.
     * @property {module:api/TasksApi}
     */
    TasksApi: TasksApi,
    /**
     * The TaxRulesApi service constructor.
     * @property {module:api/TaxRulesApi}
     */
    TaxRulesApi: TaxRulesApi,
    /**
     * The VideoGroupsApi service constructor.
     * @property {module:api/VideoGroupsApi}
     */
    VideoGroupsApi: VideoGroupsApi,
    /**
     * The VideosApi service constructor.
     * @property {module:api/VideosApi}
     */
    VideosApi: VideosApi,
    /**
     * The WidgetsApi service constructor.
     * @property {module:api/WidgetsApi}
     */
    WidgetsApi: WidgetsApi
  };

  return exports;
}));
